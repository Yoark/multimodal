{"version":3,"sources":["components/Nav.js","components/ScatterPlot.js","components/SingleListBox.js","components/Filter.js","components/InstanceCard.js","components/DataContext.js","components/InstanceList.js","views/ExploreInstanceList.js","views/ExploreScatterPlot.js","views/ComparisonInstanceList.js","views/ComparisonScatterPlot.js","components/SingleInstanceView.js","views/ExploreSingleInstance.js","views/ComparisonSingleInstance.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useHistory","location","useLocation","useState","showNav","setShowNav","useEffect","test","pathname","className","to","jsx","ScatterPlot","data","selectedObjNumber","selectedObjName","selectedYaxis","selectedXaxis","predictions","filteredGroups","fetch","then","res","json","score","console","log","filteredData","filter","instance","object_categories","includes","filterResult","xAxis","tempRecord","map","filteredInstance","instances","xGroup","x","filterGroups","d3","remove","svg","padding","yaxisName","xaxisName","xScale","domain","d","range","plot_svg_width","yScale","Bleu_1","plot_svg_height","rScale","size","axisB","scale","axisL","myColor","num_objects","append","attr","call","style","text","tooltip","selectAll","enter","on","event","html","pageX","pageY","i","id","height","width","SingleListBox","label","options","setOption","value","setValue","onChange","onOptionChange","option","idx","Filter","setFilteredData","objectNameOptions","setObjectNameOptions","objectNumberOptions","setObjectNumberOptions","actionTypeOptions","setActionTypeOptions","setSelectedObjName","setSelectedObjNumber","selectedActionType","setSelectedActionType","setSelectedXaxis","setSelectedYaxis","objectSet","Set","tempObjectNameOptions","forEach","objectName","add","toLowerCase","push","sort","objectNumSet","tempObjectNumberOptions","objectNumber","a","b","verbSet","events","verbs","verbName","verbtName","InstanceCard","eventlist","index","event_name","imgPath","img_fn","src","alt","place","Data","createContext","DataContext","children","setPredictions","result","catch","e","Provider","InstanceList","mode","useContext","ExploreInstanceList","ExploreScatterPlot","ComparisonInstanceList","ComparisonScatterPlot","SingleInstanceView","ExploreSingleInstance","ComparisonSingleInstance","App","from","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8a15ec4.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport DropdownMenu from './DropdownMenu'\nimport {useHistory, useLocation, Link} from 'react-router-dom'\n\nfunction Nav() {\n  const history = useHistory()\n  const location = useLocation()\n  const [showNav, setShowNav] = useState(true)\n\n  useEffect(() => {\n    if(/^\\S*\\/instances\\//.test(location.pathname)) setShowNav(false)\n    else setShowNav(true)\n  }, [location])\n\n  /*const jumpTo = (path1, path2) => {\n    history.push({pathname: `/${path1}/${path2}`})\n  }\n  \n  const exploreDropdown = [\n    ['Instance', () => jumpTo('explore', 'instances')],\n    ['Scatter Plot', () => jumpTo('explore', 'plot')],\n  ]\n  \n  const comparisonDropdown = [\n    ['Instance', () => jumpTo('comparison', 'instances')],\n    ['Scatter Plot', () => jumpTo('comparison', 'plot')],\n  ]*/\n\n  return (showNav &&\n    <div className='nav-container'>\n      <p>Mode: </p>\n      <div><Link to={'/explore/instances'}>Exploration  |</Link></div>\n      <div><Link to={'/comparison/instances'}>| Comparison</Link></div>\n      <style jsx='true'>\n        {`\n        .nav-container {\n          height: 140px;\n          padding: 0px 50px;\n          display: flex;\n          justify-content: flex-end;\n          align-items: center;\n        }\n        `}\n      </style>\n    </div>\n  )\n}\n\nexport default Nav\n","import React, {useEffect} from 'react'\nimport * as d3 from 'd3'\n\nfunction ScatterPlot({data, selectedObjNumber, selectedObjName, selectedYaxis, selectedXaxis}) {\n    \n    \n    useEffect(() => {\n        if (data.predictions) {\n            let filteredGroups = []\n            const getScore = () => {\n                fetch('http://172.28.218.139:8080/api/v1/data/getScore')\n                .then(res => res.json())\n                .then(score => console.log(score))\n            }\n            getScore()\n            if (selectedXaxis === 'num of objects') {\n                const filteredData = data.predictions.filter((instance) => {\n                    return instance.object_categories.includes(selectedObjName) \n                })\n                console.log(filteredData)\n    \n                const filterGroups = (filteredData, xAxis) => {\n                    const tempRecord = {}\n                    return filteredData.map(filteredInstance => {\n                        if(tempRecord[filteredInstance[xAxis]]) return\n                        tempRecord[filteredInstance[xAxis]] = true\n                        const instances = filteredData.filter(instance => instance[xAxis] === filteredInstance[xAxis])\n                        return {\n                            xGroup: filteredInstance[xAxis],\n                            instances: instances\n                        }\n                    }).filter(x => x)\n                }\n                const filterResult = filterGroups(filteredData, 'num_objects')\n                console.log(filterResult)\n                //console.log(\"True\")\n                \n            } else {\n                const filteredData = data.predictions.filter((instance) => {\n                    return instance.object_categories.includes(selectedObjName) \n                })\n                console.log(filteredData)\n    \n                const filterGroups = (filteredData, xAxis) => {\n                    const tempRecord = {}\n                    return filteredData.map(filteredInstance => {\n                        if(tempRecord[filteredInstance[xAxis]]) return\n                        tempRecord[filteredInstance[xAxis]] = true\n                        const instances = filteredData.filter(instance => instance[xAxis] === filteredInstance[xAxis])\n                        return {\n                            xGroup: filteredInstance[xAxis],\n                            instances: instances\n                        }\n                    }).filter(x => x)\n                }\n                const filterResult = filterGroups(filteredData, 'num_objects')\n                console.log(filterResult)\n            }\n\n            \n            console.log(filteredGroups)\n\n            d3.selectAll(\"svg > *\").remove()    \n            const svg = d3.select(\"#plot\")\n            const plot_svg_width = 600\n            const plot_svg_height = 500\n            const padding = 40\n            const margin = 20\n            let yaxisName = selectedYaxis\n            let xaxisName = selectedXaxis\n            \n            let xScale = d3.scaleLinear()\n                .domain([0, d3.max(filteredGroups, function(d) { return d.xGroup; })]) //filteredDate is a new data form the getScore function\n                .range([padding, plot_svg_width - padding * 2]);\n        \n            let yScale = d3.scaleLinear()\n                .domain([0, d3.max(filteredGroups, function(d) { return d.Bleu_1; })]) //use bleu score with key \"Bleu_1\"\n                .range([plot_svg_height - padding, padding]);\n        \n            let rScale = d3.scaleLinear()\n                .domain([0, d3.max(filteredGroups, function(d) { return d.size; })]) //value of key \"size\" is the samples number in each group\n                .range([5, 10]);\n\n            const axisB = d3.axisBottom()\n                .scale(xScale);\n            \n            const axisL = d3.axisLeft()\n                .scale(yScale);      \n                \n            let myColor = d3.scaleOrdinal()\n                .domain([0, d3.max(filteredGroups, function(d) { return d.num_objects; })])\n                .range([\"gold\", \"blue\", \"green\", \"yellow\", \"black\", \"grey\", \"darkgreen\", \"pink\", \"brown\", \"slateblue\", \"grey1\", \"orange\"]);\n\n            svg.append(\"g\")\n                .attr(\"transform\",\"translate(0, \"+(plot_svg_height - padding)+\")\")\n                .attr(\"class\",\"axis\")\n                .call(axisB);\n            \n            svg.append(\"text\")\n                .attr(\"y\", plot_svg_height - margin)\n                .attr(\"x\", plot_svg_width / 2)\n                .attr(\"dy\", \"1em\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"12px\")\n                .text(xaxisName);\n            \n            svg.append(\"g\")\n                .attr(\"class\",\"axis\")\n                .attr(\"transform\",\"translate(\"+padding+\",0)\")\n                .call(axisL);\n                \n            svg.append(\"text\")\n                .attr(\"transform\", \"translate(-2, \"+(plot_svg_height / 2)+\") rotate(-90)\")\n                .attr(\"dy\", \"1em\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"12px\")\n                .text(yaxisName);\n\n            const tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"class\",\"tooltip\")\n                .style(\"opacity\",0.0);\n\n            svg.selectAll(\"circle\")\n                .data(filteredGroups)\n                .enter()\n                .append(\"circle\")\n                .attr(\"cx\", function(d) {\n                    return xScale(d.num_objects);\n                })\n                .attr(\"cy\", function(d) {\n                    return yScale(d.Bleu_1);\n                })\n                .attr(\"r\",function(d) {\n                    return rScale(d.size); //value of key \"size\" is the samples number in each group\n                })\n                .attr(\"fill\", function(d) {\n                    return myColor(d.num_objects);\n                })\n                .on(\"mousedown\", function(event, d) {\n                    tooltip.html(\"Object Number is:\" + d.num_objects + \"</ br>\" + \"Score:\" + d.Bleu_1)\n                        .style(\"left\", (event.pageX) + \"px\")\n                        .style(\"top\", (event.pageY + 20) + \"px\")\n                        .style(\"opacity\",1.0);   \n                })\n                .on(\"mouseup\", function(d, i) {\n                    tooltip.style(\"opacity\",0.0);     \n                });\n        }\n        \t    \n    }, [data, selectedObjName, selectedObjNumber, selectedYaxis, selectedXaxis])\n\n    return (\n        <div className = \"plot\">\n            <svg id=\"plot\" height={500} width={600}></svg>\n        \n            <style jsx='true'>\n                {`\n                .plot {\n                float: left;\n                width: 600px;\n                height: 500px;\n                }\n\n                .tooltip{\n                position: absolute;\n                width: 120;\n                height: auto;\n                font-family: simsun;\n                font-size: 14px;\n                text-align: center;\n                border-style: solid; \n                border-width: 1px;\n                background-color: white;\n                border-radius: 5px;\n                }\n                `}\n            </style>\n        </div>\n\n    )\n    \n}\n\nexport default ScatterPlot","import React, {useState, useEffect} from 'react'\nimport {Listbox, ListboxOption} from '@reach/listbox'\n// other CSS is defined in styles/list-box.css\n\nfunction SingleListBox({label, options, setOption}) {\n  const [value, setValue] = useState()\n\n  useEffect(() => {\n    if(options[0]) setValue(options[0][0])\n  },[options])\n\n  console.log({options})\n\n  const onOptionChange = (value) => {\n    setValue(value)\n    setOption(value)\n  }\n  return (\n    <>\n      <p className='option-label'>{label}</p>\n      <Listbox value={value} onChange={(value) => onOptionChange(value)}>\n        {options ? options.map((option, idx) => <ListboxOption value={option[0]} key={idx}>{option[1]}</ListboxOption>) : ''}\n      </Listbox>\n      <style jsx='true'>\n        {`\n        .option-label {\n          margin: 10px 0px;\n        }\n        `}\n      </style>\n    </>\n  )\n}\n\nexport default SingleListBox\n","import React, {useState, useEffect, useContext} from 'react'\nimport ScatterPlot from './ScatterPlot'\nimport SingleListBox from './SingleListBox'\n// import {Data} from './DataContext'\n\nfunction Filter({data, setFilteredData}) {\n  // const data = useContext(Data)\n  const [objectNameOptions, setObjectNameOptions] = useState([])\n  const [objectNumberOptions, setObjectNumberOptions] = useState([])\n  const [actionTypeOptions, setActionTypeOptions] = useState([])\n  const [selectedObjName, setSelectedObjName] = useState()\n  const [selectedObjNumber, setSelectedObjNumber] = useState()\n  const [selectedActionType, setSelectedActionType] = useState()\n  const [selectedXaxis, setSelectedXaxis] = useState()\n  const [selectedYaxis, setSelectedYaxis] = useState()\n  // option format: [value for logic, string to display]\n\n  const yAxisOptions = [\n    ['Bleu_1', 'Bleu Score'],\n    ['Cider', 'CIDEr Score'],\n  ]\n\n  const xAxisOptions = [\n    ['num of objects', 'Num of Objects'],\n    ['name of object', 'Name of Objects'],\n  ]\n  \n  const markOptions = [\n    ['true', 'True'],\n    ['false', 'False'],\n  ]\n// Obj Name\n  const objectSet = new Set()\n  \n  useEffect(() => {\n    if(data.predictions) {\n      const tempObjectNameOptions = []\n      data.predictions.forEach(instance => {\n        instance.object_categories.forEach(objectName => {\n          objectSet.add(objectName.toLowerCase())\n        })\n      })\n      objectSet.forEach(objectName => {\n        tempObjectNameOptions.push([objectName, objectName])\n      })\n      setObjectNameOptions(tempObjectNameOptions)\n    }\n  }, [data])\n  objectNameOptions.sort();\n\n//Obj Number\n  const objectNumSet = new Set()\n  useEffect(() => {\n    if(data.predictions) {\n      const tempObjectNumberOptions = []\n      data.predictions.forEach(instance => {\n\n          objectNumSet.add(instance.num_objects)\n        \n      })\n      objectNumSet.forEach(objectNumber => {\n        tempObjectNumberOptions.push([objectNumber, objectNumber])\n      })\n      setObjectNumberOptions(tempObjectNumberOptions)\n    }\n  }, [data])\n  objectNumberOptions.sort(function(a,b){return a[0] - b[0]});\n// Action Type\n  const verbSet = new Set()\n  useEffect(() => {\n    if(data.predictions) {\n      const actionTypeOptions = []\n      data.predictions.forEach(instance => {\n        instance.events.forEach(event => {\n          event.verbs.forEach(verbName =>{\n            verbSet.add(verbName.toLowerCase())\n          })\n        })\n      })\n      verbSet.forEach(verbtName => {\n        actionTypeOptions.push([verbtName, verbtName])\n      })\n      setActionTypeOptions(actionTypeOptions)\n    }\n  }, [data])\n  actionTypeOptions.sort();\n\n  useEffect(() => {\n    if(data.predictions){\n    console.log('options has changed, the new result = ', selectedObjName, selectedObjNumber)\n    // use data with filter function \n    // const findMatchAction(verbs, instance){\n    // data.predictions.filter((instance) => {})\n    // }\n    const filteredData = data.predictions.filter((instance) => {\n       return instance.object_categories.includes(selectedObjName) && instance.num_objects === selectedObjNumber \n      //return instance.events.verbs.includes(selectedActionType)\n    })\n    setFilteredData(filteredData) // pass filtered data in\n    }\n  },[selectedObjName, selectedObjNumber,selectedActionType])\n  return (\n    <div>\n      <div className='filter-container'>\n        <SingleListBox label='X Axis' options={xAxisOptions} setOption={setSelectedXaxis}/>\n        <SingleListBox label='Y Axis' options={yAxisOptions} setOption={setSelectedYaxis}/>\n        <SingleListBox label='Object Name' options= {objectNameOptions} setOption={setSelectedObjName} />\n        <SingleListBox label='Object Number' options= {objectNumberOptions} setOption={setSelectedObjNumber} />\n        <SingleListBox label='Action Type' options={actionTypeOptions} setOption={setSelectedActionType} />\n        <SingleListBox label='Mark' options={markOptions} />\n      </div>\n      <ScatterPlot data={data} selectedObjNumber={selectedObjNumber} selectedObjName={selectedObjName} selectedYaxis={selectedYaxis} selectedXaxis={selectedXaxis}/>\n      <style jsx='true'>\n        {`\n        .filter-container {\n          display: flex;\n          justify-content: space-around;\n          padding: 10px;\n          background-color: #C4C4C4;\n          width: 80vw;\n          align-items: center;\n        }\n        `}\n      </style>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nfunction InstanceCard({instance}) {\n  const eventlist = instance.events.map(function(event,index) {\n  return <h2>Event {index+1}: {event.event_name}</h2>;\n})\n\n  const baseURL = '/data/image_val_200/';\n  const imgPath = baseURL + instance.img_fn\n  return (\n    <div className='card-container'>\n      <img className= 'cardImg' src= {imgPath} alt='place holder' />\n\n      <p className= 'eventName'>{eventlist}</p>\n      <p>Scene: {instance.place}</p>\n      <style jsx='true'>\n        {`\n        .card-container {\n          width: 200px;\n          height: 100%;\n          padding: 5px;\n          margin: 5px;\n          border: 1px solid black;\n        }\n        .cardImg{\n          width: 200px;\n          height: 100px;\n        }\n        .eventName{\n          font-size: 10px;\n        }\n        `}\n      </style>\n    </div>\n  )\n}\n\nexport default InstanceCard\n","import React, {createContext, useState, useEffect} from 'react'\n\nexport const Data = createContext(null)\n\nfunction DataContext({children}) {\n  const [predictions, setPredictions] = useState()\n\n  const readDataJson = () => {\n    fetch('/data/200_sample_val_conv.json')\n      .then(res => res.json())\n      .then(result => {\n        console.log(result)\n        setPredictions(result)\n      })\n      .catch(e => console.log(e))\n  }\n\n  useEffect(() => {\n    readDataJson()\n  }, [])\n\n  return (\n    <Data.Provider value={{predictions}}>\n      {children}\n    </Data.Provider>\n  )\n}\n\nexport default DataContext\n","import React, {useState, useEffect, useContext} from 'react'\nimport Filter from './Filter'\n//import ScatterPlot from './ScatterPlot'\nimport InstanceCard from './InstanceCard'\nimport {Link} from 'react-router-dom'\n// import data from '../data/200_sample_val_conv.json'\nimport {Data} from './DataContext'\n\nfunction InstanceList({mode}) {\n  // const requireImages = require.context('../data/image_val_100/', true, /\\.jpg$/)\n  // const allImgpaths = requireImages.keys().map(path => ({path, file: requireImages(path)}))\n  const data = useContext(Data)\n  const [filteredData, setFilteredData] = useState()\n\n  useEffect(() => {\n    console.log(data)\n    if(data.predictions) setFilteredData(data.predictions)\n  },[data])\n  console.log(filteredData)\n  return (\n    <div className='instance-list-container'>\n      <Filter data={data} setFilteredData={setFilteredData} />\n      <div className='cards-container'>\n        {filteredData && filteredData.map((instance, idx) => <Link to={`/${mode}/instances/${idx}`} key={idx}><InstanceCard instance={instance} /></Link>)}\n      </div>\n      <style jsx='true'>\n        {`\n        .instance-list-container {\n          padding: 30px;\n        }\n\n        .cards-container {\n          display: flex;\n          width: 50%;\n          flex-wrap: wrap;\n        }\n        `}\n      </style>\n      \n    </div>\n    \n  )\n}\n\nexport default InstanceList\n","import React from 'react'\nimport InstanceList from '../components/InstanceList'\n\nfunction ExploreInstanceList() {\n  return (\n    <div>\n      <InstanceList mode='explore' />\n    </div>\n  )\n}\n\nexport default ExploreInstanceList\n","import React from 'react'\n//import ScatterPlot from '../components/ScatterPlot'\n\nfunction ExploreScatterPlot() {\n  return (\n    <div>\n      ScatterPlot\n    </div>\n  )\n}\n\nexport default ExploreScatterPlot\n","import React from 'react'\nimport InstanceList from '../components/InstanceList'\n\nfunction ComparisonInstanceList() {\n  return (\n    <div>\n    <InstanceList mode='comparision' />\n    </div>\n  )\n}\n\nexport default ComparisonInstanceList\n","import React from 'react'\n\nfunction ComparisonScatterPlot() {\n  return (\n    <div>\n      ComparisonScatterPlot\n    </div>\n  )\n}\n\nexport default ComparisonScatterPlot\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction SingleInstanceView({instance, mode}) {\n  return (\n    <div className='container'>\n      <div>\n        <Link to={`/${mode}/instances`}>Back</Link>\n        <img src='https://via.placeholder.com/800x360.png' alt='place holder'/>\n        <div>\n          <button>Show all label</button>\n          <button>Show bounding boxes</button>\n          <button>Bounding box correspond to text</button>\n          <button>Show highlight in text</button>\n        </div>\n        <div>\n          <button>Previous</button>\n          <button>Next</button>\n        </div>\n      </div>\n      <div>\n        <p>Mode: {mode}</p>\n        <div className='misc-container'>event</div>\n      </div>\n      <style jsx='true'>\n        {`\n        .container {\n          display: flex;\n        }\n\n        .misc-container {\n          width: 50vw;\n          height: 70vh;\n          background-color: #C4C4C4;\n          margin: 5px;\n        }\n        `}\n      </style>\n    </div>\n  )\n}\n\nexport default SingleInstanceView\n","import React from 'react'\nimport SingleInstanceView from '../components/SingleInstanceView'\n\nfunction ExploreSingleInstance() {\n  return <SingleInstanceView mode='explore' />\n}\n\nexport default ExploreSingleInstance\n","import React from 'react'\nimport SingleInstanceView from '../components/SingleInstanceView'\n\nfunction ComparisonSingleInstance() {\n  return <SingleInstanceView mode='comparison' />\n}\n\nexport default ComparisonSingleInstance\n","import {BrowserRouter as Router, Route, Redirect} from 'react-router-dom'\nimport Nav from './components/Nav'\nimport ExploreInstanceList from './views/ExploreInstanceList'\nimport ExploreScatterPlot from './views/ExploreScatterPlot'\nimport ComparisonInstanceList from './views/ComparisonInstanceList'\nimport ComparisonScatterPlot from './views/ComparisonScatterPlot'\nimport ExploreSingleInstance from './views/ExploreSingleInstance'\nimport ComparisonSingleInstance from './views/ComparisonSingleInstance'\nimport DataContext from './components/DataContext'\nimport './App.css'\n\nfunction App() {\n  return (\n    <Router>\n      <DataContext>\n        <Nav />\n        {/* make path '/explore/instances' as our landing page */}\n        <Redirect from='/' to='/explore/instances' />\n        <Route path='/explore/instances' exact component={ExploreInstanceList} />\n        <Route path='/explore/instances/:id' exact component={ExploreSingleInstance} />\n        {/* you can access the following page by visiting http://localhost:3000/explore/plot */}\n        <Route path='/explore/plot' exact component={ExploreScatterPlot} />\n        <Route path='/comparison/instances' exact component={ComparisonInstanceList} />\n        <Route path='/comparison/instances/:id' exact component={ComparisonSingleInstance} />\n        <Route path='/comparison/plot' exact component={ComparisonScatterPlot} />\n      </DataContext>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}